<?php

namespace App;

use Illuminate\Notifications\Notifiable;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'username', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function profile()
    {
        return $this->hasOne(Profile::class);
    }

    public function posts()
    {
        return $this->hasMany(Post::class)->orderBy('created_at', 'DESC');
    }

    public function following()
    {
        return $this->belongsToMany(Profile::class);
    }

    public function timeline()
    {
        $following = User::with(['posts' => function ($query) {
            $query->orderBy('created_at', 'desc');
            // Sort id descending because the data generated by seeder is too close
            $query->orderBy('id', 'desc');
            // Set 10 items per page
            $query->paginate(10);
        }])->get();


        $timeline = $following->flatMap(function ($values) {
            return $values->posts;
        });
        $sorted = $timeline->sortByDesc(function ($post) {
            return $post->created_at;
        });
        return $sorted->values()->all();
    }
}
